=================================
How to Use 101-lazy_matrix_mul.py
=================================

This module defines a matrix multiplication function
``lazy_matrix_mul(m_a, m_b)`` that uses NumPy.

Basic Usage
==========

Valid matrix multiplication:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[5, 6], [7, 8]]
    >>> print(lazy_matrix_mul(m_a, m_b))
    [[19 22]
     [43 50]]

Edge Cases
=========

Empty matrices:

    >>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
    Traceback (most recent call last):
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

    >>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

Invalid Inputs
=============

Non-matrix inputs:

    >>> print(lazy_matrix_mul("not a list", [[1, 2]]))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul([[1, 2]], "not a list"))
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead

None inputs:

    >>> print(lazy_matrix_mul(None, None))
    Traceback (most recent call last):
    TypeError: Object arrays are not currently supported

Shape Mismatches
===============

Incompatible dimensions:

    >>> print(lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

Invalid Elements
===============

Non-numeric elements:

    >>> print(lazy_matrix_mul([[1, "a"]], [[3, 4]]))
    Traceback (most recent call last):
    TypeError: invalid data type for einsum

Irregular Matrices
=================

Inconsistent row sizes:

    >>> print(lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.
